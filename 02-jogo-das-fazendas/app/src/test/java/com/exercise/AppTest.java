/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.exercise;

import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Order;
import org.junit.jupiter.api.Test;

class FarmTest {

  @Test
  @Order(1)
  @DisplayName("1 - Teste do cálculo da área do quadrado, passando 0 como argumento.")
  void squareArea() {
    Square square = new Square(0);
    assertEquals(0, square.area());
  }

  @Test
  @Order(2)
  @DisplayName("2 - Teste do cálculo da área do quadrado.")
  void squareZeroAreaCalc() {
    Square square = new Square(3);
    assertEquals(9, square.area());
  }

  @Test
  @Order(3)
  @DisplayName("3 - Teste do cálculo da área do Triângulo, passando 0 como argumento.")
  void triangleAreaCalc() {
    Triangle triangle = new Triangle(0, 1);
    assertEquals(0, triangle.area());
  }

  @Test
  @Order(4)
  @DisplayName("4 - Teste do cálculo da área do Triângulo.")
  void triangleZeroAreaCalc() {
    Triangle triangle = new Triangle(1.8, 5);
    assertEquals(4.5, triangle.area());
  }

  @Test
  @Order(5)
  @DisplayName("5 - Teste do cálculo da área do Retângulo, passando 0 como argumento.")
  void rectangleAreaCalc() {
    Rectangle rectangle = new Rectangle(0, 1);
    assertEquals(0, rectangle.area());
  }

  @Test
  @Order(6)
  @DisplayName("6 - Teste do cálculo da área do Retângulo")
  void rectangleZeroAreaCalc() {
    Rectangle rectangle = new Rectangle(1.8, 5);
    assertEquals(9, rectangle.area());
  }

  @Test
  @Order(7)
  @DisplayName("7 - Teste do cálculo da área do Círculo, passando 0 como argumento.")
  void circleAreaCalc() {
    Circle circle = new Circle(0);
    assertEquals(0, circle.area());
  }

  @Test
  @Order(8)
  @DisplayName("8 - Teste do cálculo da área do Círculo")
  void circleZeroAreaCalc() {
    Circle circle = new Circle(10);
    assertEquals(314, circle.area());
  }

  @Test
  @Order(9)
  @DisplayName("9 - Verifica a quantidade de pontos do jogador.")
  void player() {
    Square sq = new Square(12);
    Triangle tr = new Triangle(6, 32);
    Rectangle rc = new Rectangle(3.5, 20);
    Circle c = new Circle(8);

    Farm[] farms = {sq, tr, rc, c};

    PlayerResult player1 = new PlayerResult("Player1", farms);

    assertEquals(511, player1.score());
  }
}